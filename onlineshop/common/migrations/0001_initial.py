# Generated by Django 4.2.20 on 2025-05-15 20:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('category_id', models.AutoField(db_column='Category_ID', primary_key=True, serialize=False)),
                ('category_name', models.CharField(blank=True, db_column='Category_Name', null=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'Categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Droppoints',
            fields=[
                ('droppoint_id', models.AutoField(db_column='Droppoint_ID', primary_key=True, serialize=False)),
                ('adress_name', models.CharField(blank=True, db_column='Adress_name', null=True)),
            ],
            options={
                'verbose_name_plural': 'Droppoints',
                'db_table': 'Droppoints',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoodImage',
            fields=[
                ('goodimage_id', models.AutoField(db_column='GoodImage_ID', primary_key=True, serialize=False)),
                ('image', models.ImageField(blank=True, db_column='Image', null=True, upload_to='goods_images/')),
            ],
            options={
                'verbose_name_plural': 'GoodImages',
                'db_table': 'GoodImage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('good_id', models.AutoField(db_column='Good_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', null=True)),
                ('slug', models.SlugField(blank=True, db_column='Slug', null=True)),
                ('price', models.FloatField(blank=True, db_column='Price', null=True)),
                ('discount', models.IntegerField(blank=True, db_column='Discount', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('characteristics', models.TextField(blank=True, db_column='Characteristics', null=True)),
                ('rating', models.FloatField(blank=True, db_column='Rating', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
            ],
            options={
                'verbose_name_plural': 'Goods',
                'db_table': 'Goods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ordergood',
            fields=[
                ('ordergood_id', models.AutoField(db_column='OrderGood_ID', primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
            ],
            options={
                'verbose_name_plural': 'OrderGood',
                'db_table': 'OrderGood',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.AutoField(db_column='Order_ID', primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, db_column='Status', null=True)),
                ('date_order_confirmed', models.DateField(blank=True, db_column='Date_order_confirmed', null=True)),
                ('delivery_code', models.CharField(blank=True, db_column='Delivery_code', null=True)),
                ('date_delivered', models.DateField(blank=True, db_column='Date_delivered', null=True)),
                ('delivery_adress_custom', models.CharField(blank=True, db_column='Delivery_Adress_Custom', null=True)),
            ],
            options={
                'verbose_name_plural': 'Orders',
                'db_table': 'Orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('review_id', models.AutoField(db_column='Review_ID', primary_key=True, serialize=False)),
                ('rating', models.FloatField(blank=True, db_column='Rating', null=True)),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
            ],
            options={
                'verbose_name_plural': 'Reviews',
                'db_table': 'Reviews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userprofiles',
            fields=[
                ('profile_id', models.AutoField(db_column='Profile_ID', primary_key=True, serialize=False)),
                ('phone_number', models.CharField(blank=True, db_column='Phone_number', null=True)),
                ('base_delivery_adress', models.CharField(blank=True, db_column='Base_delivery_adress', null=True)),
                ('display_name', models.CharField(blank=True, db_column='Display_name', null=True)),
            ],
            options={
                'verbose_name_plural': 'UserProfiles',
                'db_table': 'UserProfiles',
                'managed': False,
            },
        ),
    ]
